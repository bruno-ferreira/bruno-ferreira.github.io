<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Here be Maps</title><description>Personal musings about maps, web and everything in between.</description><link>http://localhost:2368/</link><generator>Ghost 0.5</generator><lastBuildDate>Fri, 10 Apr 2015 14:12:50 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>Improving OSM street geocodes using Nominatim</title><description>&lt;p&gt;I've been playing with OSM data for a couple a years and while having a blast I've come across a few issues that can be improved and bring OSM to its full potential as a mainstream map service.&lt;/p&gt;

&lt;p&gt;When I started to check &lt;a href="http://download.geofabrik.de/europe/portugal-latest.osm.pbf"&gt;Portugal&lt;/a&gt; OSM dataset from &lt;a href="http://download.geofabrik.de/"&gt;Geofabrik&lt;/a&gt; I noticed that some street data had a lot of missing tags regarding the location (city, place, town, postalcode, etc). Of course this all ends up to the users to add this kind of information but currently OSM can provide this update using their geocoding service.&lt;/p&gt;

&lt;p&gt;Let me guide you with a quick example.&lt;/p&gt;

&lt;p&gt;Loading up the data into a PostgreSQL database and querying to see the tags of a way entry&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-sql"&gt;SELECT id, tags  
FROM osm.ways  
WHERE id = 4319262;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I get the following result:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   id    |       tags
---------+--------------------------
 4319262 | "lit"=&amp;gt;"yes",
         | "ref"=&amp;gt;"A 12",
         | "lanes"=&amp;gt;"3",
         | "oneway"=&amp;gt;"yes",
         | "highway"=&amp;gt;"motorway",
         | "int_ref"=&amp;gt;"E 01"
(1 row)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With the exception of it's geometry I don't have &lt;em&gt;any&lt;/em&gt; way to find out where this street is located. But using the search of the OpenStreetMap website I was able to get the information that I needed using the results from OpenStreetMap Nominatim.&lt;/p&gt;

&lt;h3 id="enternominatim"&gt;Enter Nominatim&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://wiki.openstreetmap.org/wiki/Nominatim"&gt;Nominatim&lt;/a&gt; is a tool to search OSM data by name and address and to generate synthetic addresses of OSM points (reverse geocoding).&lt;/p&gt;

&lt;p&gt;I started to fiddle with the reverse geocode API with the following paramateres:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;URL&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href="http://nominatim.openstreetmap.org/reverse"&gt;http://nominatim.openstreetmap.org/reverse&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Output format&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;format=[xml|json]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;OSM data type&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;osm_type=[N|W|R]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;OSM id&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;osm_id=&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;address details&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;addressdetails=[0|1]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Final URL link&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://nominatim.openstreetmap.org/reverse?format=json&amp;amp;osm_type=W&amp;amp;osm_id=4319262"&gt;http://nominatim.openstreetmap.org/reverse?format=json&amp;amp;osm_type=W&amp;amp;osm_id=4319262&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fired this bad boy into my browser and the API returned&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-json"&gt;{
    "place_id": "46776850",
    "licence": "Data © OpenStreetMap contributors, ODbL 1.0 http://www.openstreetmap.org/copyright",
    "osm_type": "way",
    "osm_id": "4319262",
    "lat": "38.7860443",
    "lon": "-9.1061436",
    "display_name": "A 12, Portela, Sacavém, Lisboa, 2685,    Portugal",
    "address": {
        "road": "A 12",
        "suburb": "Portela",
        "town": "Sacavém",
        "county": "Lisboa",
        "postcode": "2685",
        "country": "Portugal",
        "country_code": "pt"
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice that the API returns the full street geocode, from suburb to country. This is exactly the information that the streets element tags needs to have.&lt;/p&gt;

&lt;p&gt;So, why isn't OSM making the update between the data and the API service? It is &lt;em&gt;fairly easy&lt;/em&gt; to create a script that does this kind of update, with fallback and error checks.&lt;/p&gt;

&lt;p&gt;Having this kind of information available in the data, as an offline solution would bring so much value, since you could create an geocode search tool and used in all sort of apps and services offline.&lt;/p&gt;</description><link>http://localhost:2368/improving-osm-data-using-nomimatim/</link><guid isPermaLink="false">a548ca4b-30f2-48d2-aa7e-49ce581c41a3</guid><category>OSM</category><dc:creator>Bruno Ferreira</dc:creator><pubDate>Fri, 10 Apr 2015 09:46:57 GMT</pubDate></item></channel></rss>